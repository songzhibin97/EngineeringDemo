// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package pkg

// Injectors from wire.go:

func NewApp() (*APP, func(), error) {
	int2, cleanup, err := ViperInit()
	if err != nil {
		return nil, nil, err
	}
	float64_2, cleanup2, err := LoggerInit()
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	db, cleanup3, err := DataInit()
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	listener, cleanup4, err := ReturnGrpcInit(db)
	if err != nil {
		cleanup3()
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	app := &APP{
		I1:       int2,
		I2:       float64_2,
		DB:       db,
		Listener: listener,
	}
	return app, func() {
		cleanup4()
		cleanup3()
		cleanup2()
		cleanup()
	}, nil
}
